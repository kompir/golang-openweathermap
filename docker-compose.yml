version: '3'
services:
  vault:
    image: vault
    command: server -dev
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
  vault-client:
    image: vault
    command:
      - /bin/sh
      - -c
      - |
        while ! $$(vault status &> /dev/null); do echo "Trying to connect to vault"; sleep 2; done
        sleep 40
        vault login $${VAULT_DEV_ROOT_TOKEN_ID}
        vault auth enable approle
        vault policy write dbwebapp /policies/dbwebapp-policy.hcl
        vault write auth/approle/role/dbwebapp policies="dbwebapp" role_id="dbrole"
        vault write auth/approle/role/dbwebapp/custom-secret-id secret_id=$${SECRET_ID}
        vault secrets enable database
        vault write database/config/mysql-database \
            plugin_name=mysql-database-plugin \
            connection_url="{{username}}:{{password}}@tcp(db:3306)/" \
            allowed_roles="vault-mysql-role" \
            username="$${DBUSER}" \
            password="$${DBPASS}"
        vault write database/roles/vault-mysql-role \
            db_name=mysql-database \
            creation_statements="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT INSERT ON weather.* TO '{{name}}'@'%';" \
            default_ttl="1h" \
            max_ttl="24h"
    volumes:
      - ./policies/:/policies/
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_ADDR: "http://vault:8200"
      DBUSER: "vault"
      DBPASS: "vault"
      SECRET_ID: "testsecret1"
    depends_on:
      - db
  db:
    container_name: "weather_db"
    image: mysql/mysql-server:8.0
    volumes:
        - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    ports:
        - "3306:3306"
    command: [ "mysqld", "--default-authentication-plugin=mysql_native_password" ]
    environment:
        - MYSQL_ROOT_PASSWORD=mysql
  api:
    container_name: "weather_api"
    command: sleep 10
    build:
      context: .
      dockerfile: api.Dockerfile
    ports:
      - "8008:8008"
    depends_on:
      - db
    volumes:
      - .:/app/
    networks:
      - default
volumes:
  mysql_data:
networks:
  default: